from typing import Sequence


def sort(container: Sequence[int]) -> Sequence[int]:
    """
    Сортировка подсчетами

    1. Определите максимальное значение в массиве и заполните вспомогательный массив с подсчетом количества элементов.
    2. Посчитайте количество каждого объекта
    3. Зная количество каждого объекта, восстановите отсортированный массив

    :param container: Массив, который надо отсортировать
    :return: Отсортированный в порядке возрастания массив
    """

    lngth = len(container)

    sorted_list = [0] * lngth  # список  отсортированных значений
    interm_list = [0] * (lngth + 1)  # промежуточный список

    for i in container:  # считаем количество вхождений каждого элемента
        interm_list[i] += 1  # значение элемента i из container здесь - это количество вхождений по индексу

    total = 0
    for i in range(lngth + 1):  # заново собираем список по возрастанию, где шаг - количество вхождений числа
        step = interm_list[i]  # количество совпадений определяет шаг
        interm_list[i] = total  # собираем список из шагов
        total += step  # для сортировки шаг может только расти

    for i in container:  # обращаем индексы обратно в элементы используя шаг между элементами списка
        sorted_list[interm_list[i]] = i
        interm_list[i] += 1

    return sorted_list
